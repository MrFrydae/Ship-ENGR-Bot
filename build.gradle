//file:noinspection DependencyNotationArgument
plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

mainClassName = "edu.ship.engr.discordbot.DiscordBot"

group 'edu.ship.engr'
version '1.8'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-suite', version: '1.9.1'

    implementation(rootProject.JDAImport) {
        exclude module: "opus-java"
    }

    implementation GsonImport

    implementation GuavaImport

    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.+'

    implementation rootProject.TupleImport

    implementation project(":Commands")
    annotationProcessor project(":Commands")
    implementation project(":Factories")

    compileOnly LombokImport
    annotationProcessor LombokImport
    testCompileOnly LombokImport
    testAnnotationProcessor LombokImport

    runtimeOnly Slf4jImport
}

test {
    useJUnitPlatform()

    maxHeapSize = '1G'
}

shadowJar {
    dependsOn(test)
    archiveFileName = 'DiscordBot.jar'
    destinationDirectory = new File(project.projectDir, "build")
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0

    toolVersion = rootProject.CheckstyleVersion
    configFile = rootProject.file("${rootDir}/config/checkstyle/checkstyle.xml")
}

allprojects {
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release.set 11
    }
}